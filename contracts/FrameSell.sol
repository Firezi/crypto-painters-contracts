pragma solidity ^0.4.24;

import "./FrameSellInterface.sol";

contract FrameSell is FrameSellInterface {
    function isFrameSellInterface() external pure returns (bool) {
        return true;
    }

    uint256[12] public prices = [
        10000000000000000,
        10000000000000000,
        10000000000000000,
        150000000000000000,
        150000000000000000,
        1000000000000000000,
        1000000000000000000,
        10000000000000000000,
        10000000000000000000,
        100000000000000000000,
        1000000000000000000000,
        10000000000000000000000
    ];

    uint256[12] public seeds = [
        0x0010000000000000000000000000000000000000000000000000000000000000,
        0x0010000100000000000000000000000000000000000000000000000000000000,
        0x0010001300000000000000000000000000000000000000000000000000000000,
        0x0010019300000000000000000000000000000000000000000000000000000000,
        0x0010054c00000000000000000000000000000000000000000000000000000000,
        0x0010107a00000000000000000000000000000000000000000000000000000000,
        0x001035ba00000000000000000000000000000000000000000000000000000000,
        0x0010effe00000000000000000000000000000000000000000000000000000000,
        0x0011cf8300000000000000000000000000000000000000000000000000000000,
        0x00154d9900000000000000000000000000000000000000000000000000000000,
        0x0018de6600000000000000000000000000000000000000000000000000000000,
        0x001c6f3300000000000000000000000000000000000000000000000000000000
    ];

    function getFrame(uint256 frameId, uint256 paidAmount) external returns (bool, uint256, uint256) {
        require(frameId < 12);

        if (paidAmount < prices[frameId]) {
            return (false, 0, 0);
        }

        uint256 frameSeed = seeds[frameId];
        uint256 excess = paidAmount - prices[frameId];
        return (true, frameSeed, excess);
    }
}
